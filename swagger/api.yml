swagger: '2.0'
info:
  title: StuRents API
  description: |
    Allow property manager websites and management tools to
    send and receive data from the StuRents database
  version: 2.0.0
host: sturents.com
schemes:
  - https
basePath: /api
produces:
  - application/json
securityDefinitions:
  PropertyManager:
    type: apiKey
    in: query
    name: landlord
    description: Property manager ID
  Channel:
    type: apiKey
    in: query
    name: channel
    description: Channel ID (must also provide property manager ID)
  Public:
    type: apiKey
    in: query
    name: public
    description: Provided public key string for landlord or channel
  Timestamp:
    type: apiKey
    in: query
    name: timestamp
    description: Unix eopch timestamp in seconds
  Auth:
    type: apiKey
    in: query
    name: auth
    description: |
      HMAC SHA256 of JSON body concat with timestamp, encoded with API key
      E.g. for a request with a JSON body like,

         {
           "field": [
             "val1",
             "val2"
            ]
         }

      The JSON must be compressed first,

      {"field":["val1","val2"]}

      Then concatenated with a timestamp

      {"field":["val1","val2"]}1529593410

      Then a HMAC generated, e.g. in PHP,

      $auth = hash_hmac('sha256', $json_compressed.$timestamp, $key)

      For a GET request with an empty body the same code could
      be used, but the JSON field would be blank (i.e. HMAC of a timestamp)
paths:
  /properties:
    get:
      summary: Returns properties for the authenticated property manager
      security:
        - PropertyManager: []
          Public: []
        - Channel: []
          PropertyManager: []
          Public: []
      tags:
        - Displaying data on external website
      responses:
        '200':
          description: |
            A list of property objects
          schema:
            $ref: '#/definitions/List'
        '400':
          $ref: '#/definitions/GetError'
        '401':
          $ref: '#/definitions/GetError'
        '404':
          $ref: '#/definitions/GetError'
        default:
          $ref: '#/definitions/Error'
  /facilities:
    get:
      summary: |
        Returns a list of all available facilities which can be
        submitted as strings when creating/updating a property
      tags:
        - Changing data on StuRents
      responses:
        '200':
          description: List of facilities
          schema:
            type: array
            items:
              type: string
  /property:
    put:
      summary: Create a new property
      security:
        - PropertyManager: []
          Timestamp: []
          Auth: []
      parameters:
        - in: body
          name: Property
          schema:
            $ref: '#/definitions/PropertyCreation'
      tags:
        - Changing data on StuRents
      responses:
        '200':
          description: |
            Information about the created property
          schema:
            $ref: '#/definitions/PropertySaved'
        '400':
          $ref: '#/definitions/SendDataError'
        '401':
          $ref: '#/definitions/SendAuthError'
        '404':
          $ref: '#/definitions/SendAuthError'
        default:
          $ref: '#/definitions/Error'
  /property/{property_id}:
    patch:
      summary: Update an existing property
      security:
        - PropertyManager: []
          Timestamp: []
          Auth: []
      parameters:
        - in: path
          name: property_id
          type: string
          required: true
          description: |
            The property ID provided by the initial creation
            or a GET /properties request
        - in: body
          name: Property
          schema:
            $ref: '#/definitions/Property'
      tags:
        - Changing data on StuRents
      responses:
        '200':
          description: |
            Information about the updated property
          schema:
            $ref: '#/definitions/PropertySaved'
        '400':
          $ref: '#/definitions/SendDataError'
        '401':
          $ref: '#/definitions/SendAuthError'
        '404':
          $ref: '#/definitions/SendAuthError'
        default:
          $ref: '#/definitions/Error'
  /contract-templates:
    get:
      summary: |
        Returns contract templates for the authenticated property manager
        The IDs of these templates will be required to set up Contract
        entities using a specific contract template
      security:
        - PropertyManager: []
          Timestamp: []
          Auth: []
      tags:
        - Changing data on StuRents
      responses:
        '200':
          description: List of contract templates
          schema:
            type: array
            items:
              $ref: '#/definitions/ContractTemplate'
        '401':
          $ref: '#/definitions/SendAuthError'
        '404':
          $ref: '#/definitions/SendAuthError'
        default:
          $ref: '#/definitions/Error'
  /payment-structures:
    get:
      summary: |
        Returns payment schedules for the authenticated property manager
        The IDs of these schedules will be required to set up Contract
        entities using a specific payment schedule
      security:
        - PropertyManager: []
          Timestamp: []
          Auth: []
      tags:
        - Changing data on StuRents
      responses:
        '200':
          description: List of payment schedules
          schema:
            type: array
            items:
              $ref: '#/definitions/PaymentSchedule'
        '401':
          $ref: '#/definitions/SendAuthError'
        '404':
          $ref: '#/definitions/SendAuthError'
        default:
          $ref: '#/definitions/Error'
  /bank-accounts:
    get:
      summary: |
        Returns available bank accounts where rent can be paid
        for a specific property
      security:
        - PropertyManager: []
          Timestamp: []
          Auth: []
      tags:
        - Changing data on StuRents
      responses:
        '200':
          description: |
            List of bank accounts (no sensitive data is provided)
          schema:
            type: array
            items:
              $ref: '#/definitions/BankAccount'
        '401':
          $ref: '#/definitions/SendAuthError'
        '404':
          $ref: '#/definitions/SendAuthError'
        default:
          $ref: '#/definitions/Error'
  /rooms/{property_id}:
    get:
      summary: |
        Returns rooms for the specified property. Includes the room_id
        field which is necessary in order to apply pricing specific to
        a room, or to edit/delete an existing room
      security:
        - PropertyManager: []
          Timestamp: []
          Auth: []
      parameters:
        - in: path
          name: property_id
          type: string
          required: true
          description: |
            The property ID provided by the initial creation
            or a GET /properties request
      tags:
        - Changing data on StuRents
      responses:
        '200':
          description: List of property rooms
          schema:
            type: array
            items:
              $ref: '#/definitions/RoomOutbound'
        '401':
          $ref: '#/definitions/SendAuthError'
        '404':
          $ref: '#/definitions/SendAuthError'
        default:
          $ref: '#/definitions/Error'
  /room/{property_id}:
    put:
      summary: Add a room to a property
      security:
        - PropertyManager: []
          Timestamp: []
          Auth: []
      parameters:
        - in: path
          name: property_id
          type: string
          required: true
          description: |
            The property ID provided by the initial creation
            or a GET /properties request
        - in: body
          name: Room
          schema:
            $ref: '#/definitions/Room'
      tags:
        - Changing data on StuRents
      responses:
        '200':
          description: Indicates the saved room ID
          schema:
            $ref: '#/definitions/RoomSaved'
        '400':
          $ref: '#/definitions/SendDataError'
        '401':
          $ref: '#/definitions/SendAuthError'
        '404':
          $ref: '#/definitions/SendAuthError'
        default:
          $ref: '#/definitions/Error'
  /room/{property_id}/{room_id}:
    patch:
      summary: Update a room on a property
      security:
        - PropertyManager: []
          Timestamp: []
          Auth: []
      parameters:
        - in: path
          name: property_id
          type: string
          required: true
          description: |
            The property ID provided by the initial creation
            or a GET /properties request
        - in: path
          name: room_id
          type: string
          required: true
          description: |
            The room ID provided by the initial creation
            or a GET /rooms/{property_id} request
        - in: body
          name: Room
          schema:
            $ref: '#/definitions/Room'
      tags:
        - Changing data on StuRents
      responses:
        '200':
          description: Indicates the saved room ID
          schema:
            $ref: '#/definitions/Room'
        '400':
          $ref: '#/definitions/SendDataError'
        '401':
          $ref: '#/definitions/SendAuthError'
        '404':
          $ref: '#/definitions/SendAuthError'
        default:
          $ref: '#/definitions/Error'
    delete:
      summary: Remove a room from a property
      security:
        - PropertyManager: []
          Timestamp: []
          Auth: []
      parameters:
        - in: path
          name: property_id
          type: string
          required: true
          description: |
            The property ID provided by the initial creation
            or a GET /properties request
        - in: path
          name: room_id
          type: string
          required: true
          description: |
            The room ID provided by the initial creation
            or a GET /rooms/{property_id} request
      tags:
        - Changing data on StuRents
      responses:
        '204':
          description: Indicates room was deleted
        '401':
          $ref: '#/definitions/SendAuthError'
        '404':
          $ref: '#/definitions/SendAuthError'
        default:
          $ref: '#/definitions/Error'
  /contracts/{property_id}:
    get:
      summary: |
        Returns contracts for the specified property. Includes the contract_id
        field which is necessary in order to edit/delete an existing contract.
        Will return disabled Contracts with the "disabled" field set to true
      security:
        - PropertyManager: []
          Timestamp: []
          Auth: []
      parameters:
        - in: path
          name: property_id
          type: string
          required: true
          description: |
            The property ID provided by the initial creation
            or a GET /properties request
      tags:
        - Changing data on StuRents
      responses:
        '200':
          description: List of property contracts
          schema:
            type: array
            items:
              $ref: '#/definitions/ContractFull'
        '401':
          $ref: '#/definitions/SendAuthError'
        '404':
          $ref: '#/definitions/SendAuthError'
        default:
          $ref: '#/definitions/Error'
  /contract/{property_id}:
    put:
      summary: Add a contract to a property
      security:
        - PropertyManager: []
          Timestamp: []
          Auth: []
      parameters:
        - in: path
          name: property_id
          type: string
          required: true
          description: |
            The property ID provided by the initial creation
            or a GET /properties request
        - in: body
          name: Contract
          schema:
            $ref: '#/definitions/ContractCreation'
      tags:
        - Changing data on StuRents
      responses:
        '200':
          description: Indicates the saved contract ID
          schema:
            $ref: '#/definitions/ContractSaved'
        '400':
          $ref: '#/definitions/SendDataError'
        '401':
          $ref: '#/definitions/SendAuthError'
        '404':
          $ref: '#/definitions/SendAuthError'
        default:
          $ref: '#/definitions/Error'
  /contract/{property_id}/{contract_id}:
    patch:
      summary: Update a contract on a property
      security:
        - PropertyManager: []
          Timestamp: []
          Auth: []
      parameters:
        - in: path
          name: property_id
          type: string
          required: true
          description: |
            The property ID provided by the initial creation
            or a GET /properties request
        - in: path
          name: contract_id
          type: string
          required: true
          description: |
            The contract ID provided by the initial creation
            or a GET /contracts/{property_id} request
        - in: body
          name: Contract
          schema:
            $ref: '#/definitions/ContractCreation'
      tags:
        - Changing data on StuRents
      responses:
        '200':
          description: Indicates the saved contract ID
          schema:
            $ref: '#/definitions/ContractSaved'
        '400':
          $ref: '#/definitions/SendDataError'
        '401':
          $ref: '#/definitions/SendAuthError'
        '404':
          $ref: '#/definitions/SendAuthError'
        default:
          $ref: '#/definitions/Error'
    delete:
      summary: |
        Disables a contract on a property. It will no longer appear
        in GET /properties requests but will appear in GET /contracts
        requests with the "disabled" boolean set to true.
      security:
        - PropertyManager: []
          Timestamp: []
          Auth: []
      parameters:
        - in: path
          name: property_id
          type: string
          required: true
          description: |
            The property ID provided by the initial creation
            or a GET /properties request
        - in: path
          name: contract_id
          type: string
          required: true
          description: |
            The contract ID provided by the initial creation
            or a GET /contracts/{property_id} request
      tags:
        - Changing data on StuRents
      responses:
        '204':
          description: Indicates contract was disabled
        '401':
          $ref: '#/definitions/SendAuthError'
        '404':
          $ref: '#/definitions/SendAuthError'
        default:
          $ref: '#/definitions/Error'
definitions:
  GetError:
    description: |
      400 - you didn't supply correct query string fields for your chosen
            use case (see auth features of each endpoint)
      401 - the key supplied did not match the property manager or channel
            specified, or the channel does not have access to the property manager
      404 - the property manager or channel does not exist, or the
            property manager does not have any properties
    type: object
    properties:
      landlord:
        type: string
        description: Informs that the provided "landlord" query string was incorrect
      public:
        type: string
        description: Indicates an issue with the provided "public" key
  SendAuthError:
    description: |
      401 - the key supplied did not match the property manager or channel
            specified, or the channel does not have access to the property manager
      404 - the property manager does not exist, or the
            specific resource requested does not exist
    type: object
    properties:
      landlord:
        type: string
        description: Indicates an issue with the provided "landlord" parameter
      auth:
        type: string
        description: Indicates an issue with the provided "auth" token
  SendDataError:
    description: |
      There were problems with the input data in the request body.
      These will be described in the "messages" field of the response
    type: object
    properties:
      messages:
        type: array
        description: Keyed by field name (collapsed using . characters)
        items:
          type: string
  List:
    type: object
    properties:
      version:
        type: string
        description: The API version being returned
      pagination:
        $ref: '#/definitions/Pagination'
      properties:
        type: array
        items:
          $ref: '#/definitions/PropertyOutbound'
  Pagination:
    type: object
    properties:
      pages:
        type: integer
        description: The number of pages total
      current:
        type: integer
        description: |
          For data integrity, the page that these results relate to
      next:
        type: integer
        description: |
          If present this shows there is another page available after this one
      prev:
        type: integer
        description: |
          If present this shows there is another page available prior to this one
  PropertyOutbound:
    allOf:
      - $ref: '#/definitions/Property'
      - type: object
        properties:
          property_id:
            type: string
            description: |
              a unique reference to the property which will not change
          room_details:
            type: array
            description: One or more Room objects
            items:
              $ref: '#/definitions/Room'
          contracts:
            type: array
            description: |
              One or more Contracts (will not show contracts which have
              been subject to a DELETE request and which show as "disabled"
              in GET /contracts requests)
            items:
              $ref: '#/definitions/ContractWithRooms'
  PropertyCreation:
    allOf:
      - $ref: '#/definitions/Property'
      - type: object
        properties:
          initial_rooms:
            type: integer
            description: |
              a number of rooms to generate for the property. Must be 1+
          initial_contract:
            $ref: '#/definitions/ContractBasic'
  Property:
    type: object
    properties:
      designation:
        type: string
        description: |
          "house" or "pbsa"
      rooms_let_individually:
        type: boolean
        description: |
          When designation is set to "house" this indicates whether
          each room may be let on a separate contract
      quantity:
        type: integer
        description: |
          When designation is set to "pbsa" this describes the
          number of identical rental options available. If designation is
          "house" then this can be set to 0.
      quantity_available:
        type: integer
        description: As above, but currently available to rent
      room_type:
        type: string
        description: |
          When designation is set to "pbsa" each property record
          describes a type of room. This field gives that type a
          name e.g. "Deluxe En-suite". If designation is "house"
          then this can be left blank.
      cluster_size:
        type: integer
        description: |
          When designation is set to "pbsa" this indicates number of rooms
          in a single cluster. If designation is "house"
          then this can be set to 0.
      description:
        type: string
        description: |
          A plain text or HTML description of the property.
          Please note HTML will be stripped but the HTML
          structure will be used to render line breaks where
          necessary. It is recommended this is at least 150 characters.
      bathrooms:
        type: integer
        description: Number of bathrooms
      floor_space:
        type: number
        description: |
          Floor space of the whole property in metres squared
      bank_id:
        type: string
        description: |
          The unique ID for a bank account where it is intended that
          the rent for this property will be paid to. This ID can be
          retrived from the /bank-accounts endpoint. Note that this ID
          will not contain sensitive information, e.g. account number
          or sort code - that information cannot be retrieved
      facilities:
        type: array
        description: Zero or more facility names
        items:
          type: string
      address:
        $ref: '#/definitions/Address'
      coordinates:
        $ref: '#/definitions/Coordinates'
      media:
        $ref: '#/definitions/Media'
      energy_performance:
        $ref: '#/definitions/EnergyPerformance'
      accreditations:
        type: array
        description: Zero or more accreditations
        items:
          $ref: '#/definitions/Accreditation'
      disabled:
        type: boolean
        description: |
          where true indicates that the property is not ready
          to be made public to students or shown in search results
      eligibility:
        $ref: '#/definitions/Eligibility'
  Address:
    type: object
    properties:
      property_name:
        type: string
        description: This is required if "property_number" is empty
      property_number:
        type: string
        description: This is required if "property_name" is empty
      road_name:
        type: string
      city:
        type: string
      postcode:
        type: string
      uprn:
        type: string
        description: If available, the unique property reference
  Coordinates:
    type: object
    properties:
      lat:
        type: number
      lng:
        type: number
  Utilities:
    type: object
    description: |
      All keys are boolean where true indicates that
      this utility is included with the rent
    properties:
      water:
        type: boolean
      gas:
        type: boolean
      electricity:
        type: boolean
      broadband:
        type: boolean
      phone:
        type: boolean
      contents_insurance:
        type: boolean
      tv_license:
        type: boolean
      council_tax:
        type: boolean
  Restriction:
    type: object
    description: |
      Allows for "special offers" or other conditions to be
      applied to a contract. Not currently saved or output by StuRents
      but specified for future integrations
    properties:
      start_date:
        type: string
        description: |
          The date that the contract this restriction
          belongs to may be purchased from in yyyy-mm-dd
      end_date:
        type: string
        description: |
          The date that the contract this restriction
          belongs to may be purchased until in yyyy-mm-dd
      terms:
        type: string
        description: |
          A text block describing this restriction
          (e.g. "For home students only")
      min_contract_days:
        type: integer
        description: |
          Minimum days a student must be renting for
          the prices in this contract to be valid
  Media:
    type: object
    properties:
      photos:
        type: array
        description: |
          Zero or more photos
          The order of photos will be maintained in the gallery;
          the 1st will be the profile photo
        items:
          $ref: '#/definitions/Photo'
      videos:
        type: array
        description: |
          Zero or more video embed URLs. Any video source can be
          supplied but at present only videos from YouTube will
          be rendered as embeded videos on the property profile pages
        items:
          type: string
      floorplans:
        type: array
        description: |
          Zero or more URLs which link to floorplan files (image or pdf)
          These will be downloaded and stored on StuRents' system
        items:
          type: string
  Photo:
    type: object
    properties:
      type:
        type: string
        description: |
          Currently only supports "url".
          These will be downloaded and stored on StuRents' system
      photo:
        type: string
        description: A URL linking to a photo file
      thumb:
        type: string
        description: A URL linking to a thumbnail photo file
      caption:
        type: string
  EnergyPerformance:
    type: object
    properties:
      epc_reference:
        type: string
        description: |
          The reference on the property's energy performance certificate.
          This is known as an RRN and is a 20 character alphanumeric code
      epc_certificate:
        type: string
        description: A URL to download the energy performance certificate
      eef_current:
        type: integer
      eef_potential:
        type: integer
      co2_current:
        type: integer
      co2_potential:
        type: integer
  Accreditation:
    type: object
    properties:
      type:
        type: string
        description: Title of an accreditation on the property
      reference:
        type: string
        description: |
          The reference connecting the property to its accrediting agency
      expiry:
        type: string
        description: |
          Date when the accreditation will expire in yyyy-mm-dd format
          (empty is assumed to not expire)
  Eligibility:
    type: object
    description: |
      Each key is a boolean indicating if the specified item is
      eligible to rent the property. At least one of the first
      four fields must be set to true
    properties:
      undergraduate_student:
        type: boolean
      postgraduate_student:
        type: boolean
      professional:
        type: boolean
      trainee:
        type: boolean
      dss:
        type: boolean
        description: Allows a recipient of UK housing benefit
      pets_permitted:
        type: boolean
      smoking_permitted:
        type: boolean
      female_only:
        type: boolean
      male_only:
        type: boolean
  ContractBasic:
    type: object
    description: |
      The bare minimum data for a contract which will be applied initially
      to all rooms generated when a property is created
    properties:
      title:
        type: string
        description: The name given to this contract
      start_date:
        type: string
        description: |
          The earliest date at which it is possible to move in to the property
          in yyyy-mm-dd format
      end_date:
        type: string
        description: |
          The latest date at which it is possible to vacate the property
          in yyyy-mm-dd format
      min_contract_days:
        type: integer
        description: |
          The minimum time a tenant may rent the property for in days
      utilities:
        $ref: '#/definitions/Utilities'
      restrictions:
        type: array
        description: Zero or more restrictions
        items:
          $ref: '#/definitions/Restriction'
  ContractWithRooms:
    description: |
      The contract object returned for fetching property data
      to display externally - includes basic information plus
      a list of room specific pricing. Only Contracts which are
      not disabled will be returned as this type.
    allOf:
      - $ref: '#/definitions/ContractBasic'
      - type: object
        properties:
          book_now_url:
            type: string
            description: |
             A URL where the property may be booked online using this contract.
             Will be blank if the property is not set up for this feature
          room_prices:
            type: array
            description: |
              A list of 1 or more rooms with prices
            items:
              $ref: '#/definitions/RoomPrice'
  ContractFull:
    description: |
      The contract object returned for fetching specific property contract
      data. Also includes the contract_id value to allow edit/delete of contract
    allOf:
      - $ref: '#/definitions/ContractWithRooms'
      - type: object
        properties:
          disabled:
            type: boolean
            description: |
              If this is set to true then the Contract is not available
              but can still be edited. Contracts which are disabled are
              not returned for GET /properties requests
          contract_id:
            type: string
            description: |
              A unique ID for this Contract which can be used when
              editing/deleting the Contract
  ContractCreation:
    description: |
      The contract object submitted to create or update a contract.
      Allows setting a template/schedule ID field and has a room price
      array allowing linking of prices to specific rooms
    allOf:
      - $ref: '#/definitions/ContractBasic'
      - type: object
        properties:
          template_id:
            type: string
            description: |
              A unique identifier for a Contract Template fetched from
              the /contract-templates endpoint. A contract template
              allows a tenancy to be created for tenants who are renting
              the property and can sign for it on StuRents
          schedule_id:
            type: string
            description: |
              A unique identifier for a Payment Schedule fetched from the
              /payment-schedules endpoint. A payment schedule allows a rent
              collection to be created for tenants to pay their rent via
              the StuRents platform, and may also impact tenancy generation
              with the schedule shown in the signed contract
          room_prices:
            type: array
            description: |
              A list of 1 or more rooms with prices
            items:
              $ref: '#/definitions/RoomPriceCreation'
  RoomPrice:
    description: |
      An entity linking a named room to pricing and deposit values
    type: object
    properties:
      room_name:
        type: string
      price_per_person_per_week:
        type: number
        description: |
          A monetary value indicating the weekly rent each tenant will
          be expected to pay during their tenancy in the property.

          This does not mean the rent is paid weekly - the StuRents
          search and profiles display all rents as a weekly amount and this
          will be used to calculate total and scheduled payments when
          creating a tenancy and/or rent collection for the property
      deposit_per_person:
        type: string
        description: |
          A monetary value indicating the deposit each tenant will be
          expected to pay upon signing a contract to rent the property
      fee_per_person:
        type: string
        description: |
          A monetary value indicating the fee to the property manager which
          each tenant will be expected to pay upon signing a contract to
          rent the property
  RoomPriceCreation:
    description: |
      A RoomPrice object for creating or updating a price, also allows setting
      the room_id value to a unique room ID from a GET /rooms/{property_id} request
    allOf:
      - $ref: '#/definitions/RoomPrice'
      - type: object
        properties:
          room_id:
            type: string
  Room:
    description: |
      Basic room details for creating or updating a room
    properties:
      room_name:
        type: string
        description: |
          Can be precise, e.g. 1a, or descrptive e.g. "downstairs front"
      floor:
        type: string
        description: |
          Intended for "pbsa" designation where floor number or classification
          is relevant
      floor_space:
        type: number
        description: |
          Floor space of the room in metres squared
      disabled_access:
        type: boolean
        description: |
          "True" if the room should be advertised as accessible
      ensuite:
        type: boolean
        description: |
          "True" if an en-suite bathroom is present for the room
  RoomOutbound:
    description: |
      A Room object fetched from the GET /rooms/{property_id} endpoint
      which provides a room_id field to edit or delete the room
    allOf:
      - $ref: '#/definitions/Room'
      - type: object
        properties:
          room_id:
            type: string
            description: |
              A unique ID for this Room object which can be used to allow
              edit/delete of this room and also to attach pricing to the
              Room using the RoomPrice object when creating/updating a
              Contract object
  ContractTemplate:
    properties:
      title:
        type: string
        description: |
          Title entered when creating this contract template
          within the StuRents website
      template_id:
        type: string
        description: |
          Pass this as the "template_id" field when creating/updating a contract
  PaymentSchedule:
    properties:
      title:
        type: string
        description: |
          Title entered when creating this schedule
          within the StuRents website
      schedule_id:
        type: string
        description: |
          Pass this as the "schedule_id" field when creating/updating a contract
  BankAccount:
    properties:
      descriptor:
        type: string
        description: How the bank account is described internally on StuRents
      bank_id:
        type: string
        description: |
          Pass this as the "bank_id" field when creating/updating a property
  PropertySaved:
    properties:
      property_id:
        type: string
        description: Unique reference to the Property on StuRents
      url:
        type: string
        description: Link to the property profile page on StuRents
  RoomSaved:
     properties:
      room_id:
        type: string
        description: Unique reference to the Room on StuRents
  ContractSaved:
     properties:
      contract_id:
        type: string
        description: Unique reference to the Contract on StuRents
  Error:
    type: object
    properties:
      error:
        type: string
